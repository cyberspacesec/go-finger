stages:
  - build
  - release

variables:
  VERSION_TAG: "1.0.1"
  GO_VERSION: "1.23"  # 根据你的 Go 版本需求调整
  BUILD_DIR: "build"
  CI_SERVER_URL: "http://iks.smile-space.com:8090/"


# 缓存 Go 模块以提高构建速度
cache:
  paths:
    - go/pkg/mod/

before_script:
  - echo "Runner....."


build:
  stage: build
  image: golang:$GO_VERSION
  script:
    - echo "重建阿里源配置..."
    - rm -f /etc/apt/sources.list
    # 写入阿里源（假设是 Debian bookworm）
    - echo "deb http://mirrors.aliyun.com/debian/ bullseye main contrib non-free" > /etc/apt/sources.list
    - echo "deb http://mirrors.aliyun.com/debian/ bullseye-updates main contrib non-free" >> /etc/apt/sources.list
    - echo "deb http://mirrors.aliyun.com/debian/ bullseye-backports main contrib non-free" >> /etc/apt/sources.list
    - echo "deb http://mirrors.aliyun.com/debian-security bullseye-security main contrib non-free" >> /etc/apt/sources.list 
    - apt-get update
    - apt-get install -y -qq upx zip
    - go env -w GOPROXY=https://goproxy.cn,direct
    - go env GOPROXY
    - go mod tidy
    - chmod +x build.sh
    - ./build.sh
  artifacts:
    paths:
      - $BUILD_DIR/
    expire_in: 1 week  # 制品保留时间

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release"
  dependencies:
    - build 
  release:
    tag_name: $VERSION_TAG
    name: "Release $VERSION_TAG"
    description: "$VERSION_TAG版本release"

