stages:
  - build
  - release

variables:
  GO_VERSION: "1.23"  # 根据你的 Go 版本需求调整
  BUILD_DIR: "build"

# 缓存 Go 模块以提高构建速度
cache:
  paths:
    - go/pkg/mod/

before_script:
  - echo "重建阿里源配置..."
  # 删除旧配置
  - rm -f /etc/apt/sources.list
  # 写入阿里源（假设是 Debian bookworm）
  - echo "deb http://mirrors.aliyun.com/debian/ bullseye main contrib non-free" > /etc/apt/sources.list
  - echo "deb http://mirrors.aliyun.com/debian/ bullseye-updates main contrib non-free" >> /etc/apt/sources.list
  - echo "deb http://mirrors.aliyun.com/debian/ bullseye-backports main contrib non-free" >> /etc/apt/sources.list
  - echo "deb http://mirrors.aliyun.com/debian-security bullseye-security main contrib non-free" >> /etc/apt/sources.list 
  - apt-get update
  - apt-get install -y -qq upx zip
  - go env -w GOPROXY=https://goproxy.cn,direct
  - go env GOPROXY
  - curl --silent --location --output /usr/local/bin/release-cli https://gitlab.com/gitlab-org/release-cli/-/releases/v0.11.0/downloads/release-cli-linux-amd64
  - chmod +x /usr/local/bin/release-cli
  - release-cli --version




build:
  stage: build
  image: golang:$GO_VERSION
  script:
    - go mod tidy
    - chmod +x build.sh
    - ./build.sh
  artifacts:
    paths:
      - $BUILD_DIR/
    expire_in: 1 week  # 制品保留时间

release:
  stage: release
  image: golang:$GO_VERSION
  script:
    - go mod tidy
    - chmod +x build.sh
    - ./build.sh
  release:
    tag_name: "1.0.0"
    name: "Release 1.0.0"
    description: "1.0.0版本release build测试"

